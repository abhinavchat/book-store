"""Delete User and Author tables

Revision ID: 682854c6da1a
Revises: 91229b173ac7
Create Date: 2020-04-28 12:59:53.811511

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '682854c6da1a'
down_revision = '91229b173ac7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('author')
    op.drop_table('book_author')
    op.drop_index('ix_user_email', table_name='user')
    op.drop_index('ix_user_phone', table_name='user')
    op.drop_index('ix_user_username', table_name='user')
    op.drop_table('user')
    op.add_column('book', sa.Column('authors', sa.String(), nullable=True))
    op.create_index(op.f('ix_book_title'), 'book', ['title'], unique=True)
    op.drop_constraint(None, 'book', type_='foreignkey')
    op.drop_column('book', 'author_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('book', sa.Column('author_id', sa.INTEGER(), nullable=True))
    op.create_foreign_key(None, 'book', 'author', ['author_id'], ['id'])
    op.drop_index(op.f('ix_book_title'), table_name='book')
    op.drop_column('book', 'authors')
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=25), nullable=True),
    sa.Column('email', sa.VARCHAR(length=50), nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=120), nullable=True),
    sa.Column('phone', sa.VARCHAR(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_username', 'user', ['username'], unique=1)
    op.create_index('ix_user_phone', 'user', ['phone'], unique=1)
    op.create_index('ix_user_email', 'user', ['email'], unique=1)
    op.create_table('book_author',
    sa.Column('book_id', sa.INTEGER(), nullable=True),
    sa.Column('author_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], )
    )
    op.create_table('author',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
